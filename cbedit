#!/usr/bin/env python

import tempfile
import subprocess
import os
import getpass
import argparse
import tarfile

import lib.crypto
import lib.cfg
import lib.html

def backup():
    tar = tarfile.open(lib.cfg.backup_file, "w")
    for name in lib.cfg.backup:
        tar.add(name)
    tar.close()

if __name__ == "__main__":

    parser = argparse.ArgumentParser(description='Edit cryptobox database')
    parser.add_argument('-v', '--version', action='version', version='Cryptobox ' + lib.cfg.version)
    parser.parse_args()

    password = getpass.getpass()

    conf = lib.crypto.read_cfg(lib.cfg.path_cfg)
    plaintext = lib.crypto.dec_db(conf, password, lib.cfg.path_db, lib.cfg.path_db_hmac)

    EDITOR = os.environ.get('EDITOR', lib.cfg.editor)

    with tempfile.NamedTemporaryFile(delete=False) as f:
        file_name = f.name
        f.write(plaintext.encode('utf-8'))
        f.flush()

    mtime_begin = os.stat(file_name).st_mtime
    subprocess.call([EDITOR, "--", file_name])
    mtime_end = os.stat(file_name).st_mtime

    if mtime_begin != mtime_end:
        # backup current database
        if len(lib.cfg.backup) > 0:
            try:
                backup()
            except:
                ans = raw_input("Couldn't perform a backup, continue? [y|n]: ")

                if not ans in ['Y', 'y']:
                    sys.exit(0)

        lib.crypto.enc_db(conf, password, file_name, lib.cfg.path_db, lib.cfg.path_db_hmac)
        lib.html.update(conf, password)
    else:
        print "No update to database"

    os.remove(file_name)
