#!/usr/bin/env python

import tempfile
import subprocess
import os
import getpass
import argparse
import sys

import lib.crypto as crypto
from lib.generate import generate_all
import lib.cfg as cfg
import lib.log as log

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Edit cryptobox database')
    parser.add_argument('-v', '--version', action='version', version='Cryptobox ' + cfg.version)
    parser.add_argument('-V', '--verbose', action='store_true', help='enable verbose mode')
    parser.add_argument('-e', '--edit-only', action='store_true', help='don\'t update HTML and bookmarklets')
    parser.add_argument('-u', '--update-only', action='store_true', help='just update HTML and bookmarklets')
    parser.add_argument('-c', '--config', action='store', help='use specified config')
    args = parser.parse_args()
    cfg.init(args)

    password = getpass.getpass()

    db_conf = crypto.read_db_conf(cfg.path['db_conf'], cfg.format_version)
    plaintext = crypto.dec_db(db_conf, password, cfg.path['db_cipher'], cfg.path['db_hmac'])

    if 'update_only' in vars(args) and vars(args)['update_only'] == True:
        generate_all(db_conf, password)
        sys.exit(0)

    EDITOR = os.environ.get('EDITOR', cfg.user['ui']['editor'])

    with tempfile.NamedTemporaryFile(suffix='.ini', delete=False, prefix='cryptobox', dir='.') as f:
#    with tempfile.NamedTemporaryFile(suffix='.ini', delete=False, prefix='cryptobox') as f:
        file_name = f.name
        f.write(plaintext.encode('utf-8'))
        f.flush()

    mtime_begin = os.stat(file_name).st_mtime
    subprocess.call([EDITOR, "--", file_name])
    mtime_end = os.stat(file_name).st_mtime

    if mtime_begin == mtime_end:
        os.remove(file_name)
        log.p("No update to database")
        sys.exit(0)

    try:
        cfg.backup()
    except:
        ans = log.yn("Couldn't perform a backup, continue?")

        if not ans in ['Y', 'y']:
            sys.exit(0)

    crypto.enc_db(db_conf, password, file_name, cfg.path['db_cipher'], cfg.path['db_hmac'])
    os.remove(file_name)


    if 'edit_only' in vars(args) and vars(args)['edit_only'] == True:
        sys.exit(0)

    generate_all(db_conf, password)
