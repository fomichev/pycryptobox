#!/usr/bin/env python

import sys
import getpass
import os
import shutil

import lib.flatten
import lib.crypto
import lib.generate
import lib.embed

debug = False

if __name__ == "__main__":
    password = getpass.getpass()

    try:
        os.mkdir("tmp/")
    except:
        pass

    key = lib.crypto.derive_key(password)
    db_plaintext = lib.crypto.dec_db(password, lib.cfg.path_db, lib.cfg.path_db_hmac)

    json_plaintext = lib.flatten.flatten(db_plaintext.split("\n"), "include/")
    if debug:
        open("tmp/_json_plaintext", "w").write(json_plaintext)

    aes_base64 = lib.crypto.enc(key, json_plaintext).encode("base64")
    if debug:
        open("tmp/_aes_base64", "w").write(aes_base64)

    aes_base64_nonl = "".join(aes_base64.split("\n"))
    if debug:
        open("tmp/_aes_base64_nonl", "w").write(aes_base64_nonl)

    index_html = lib.generate.html("template/index.html")
    open("tmp/index.html", "w").write(index_html)

    cfg_js = lib.generate.config(aes_base64_nonl)
    open("tmp/cfg.js", "w").write(cfg_js)

    os.chdir("tmp")
    lib.embed.embed("index.html", "../private/cryptobox.html")

    if debug == False:
        os.chdir("..")
        shutil.rmtree("tmp")
